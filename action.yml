name: conventional commits
description:
  enforces conventional commit style in pull requests with Ory-specific defaults

inputs:
  GITHUB_TOKEN:
    description: the GitHub token to use
    required: true

runs:
  using: composite
  steps:
    - name: define the default types used at Ory
      id: default_types
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const defaultTypes = `
            feat
            fix
            revert
            docs
            style
            refactor
            test
            build
            autogen
            security
            ci
            chore
          `
          return defaultTypes.trim()

    - name: define the default scopes used at Ory
      id: default_scopes
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const defaultScopes = `
            blog
            cms
            deps
            docs
            home
            stats
          `
          return defaultScopes.trim()

    - name: load repo-specific types
      id: custom_types
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          let types = `${{ steps.default_types.outputs.result }}`
          const configPath = ".github/conventional_commits.json"
          try {
            var configText = require("fs").readFileSync(configPath, "utf8")
          } catch (e) {
            // no config file --> use the default types
            return types
          }
          try {
            var config = JSON.parse(configText)
          } catch (e) {
            console.log(`ERROR: invalid JSON in ${configPath}:`)
            console.log(e)
            // invalid config file -->  use the default types
            return types
          }
          if (config.types) {
            types = config.types.join("\n")
          }
          if (config.addTypes) {
            types += "\n" + config.addTypes.join("\n")
          }
          return types

    - name: load repo-specific scopes
      id: custom_scopes
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          let scopes = `${{ steps.default_scopes.outputs.result }}`
          const configPath = ".github/conventional_commits.json"
          try {
            var configText = require("fs").readFileSync(configPath, "utf8")
          } catch (e) {
            // no config file --> use the default scopes
            return scopes
          }
          try {
            var config = JSON.parse(configText)
          } catch (e) {
            console.log(`ERROR: invalid JSON in ${configPath}:`)
            console.log(e)
            // invalid config file --> use the default scopes
            return scopes
          }
          if (config.scopes) {
            scopes = config.scopes.join("\n")
          }
          if (config.addScopes) {
            scopes += "\n" + config.addScopes.join("\n")
          }
          return scopes

    - name: load repo-specific requireScope
      id: custom_require_scope
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const configPath = ".github/conventional_commits.json"
          try {
            var configText = require("fs").readFileSync(configPath, "utf8")
          } catch (e) {
            return false
          }
          try {
            var config = JSON.parse(configText)
          } catch (e) {
            console.log(`ERROR: invalid JSON in ${configPath}:`)
            console.log(e)
            return false
          }
          if (config.requireScope) {
            return config.requireScope
          }
          return false

    - uses: amannn/action-semantic-pull-request@v4
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        types: ${{ steps.custom_types.outputs.result }}
        scopes: ${{ steps.custom_scopes.outputs.result }}
        requireScope: ${{ steps.custom_require_scope.outputs.result }}
        subjectPatternError: |
          The subject should start with a lowercase letter, yours is uppercase:
          "{subject}"
